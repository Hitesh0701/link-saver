// for component same width height with radius
@mixin circle($width, $radius) {
  width: $width;
  height: $width;
  border-radius: $radius;
}

// show text in fixed lines
@mixin webkit-box($lines) {
  display: -webkit-box;
  -webkit-line-clamp: $lines;
  -webkit-box-orient: vertical;
  overflow: hidden;
}  

// for add color default and for hover
@mixin interchange($background, $color) {
  background-color: $background;
  color: $color;
  &:hover{
    background-color: $color;
    color: $background;
  }
}

// inline flex with space around
@mixin inline-between($flex, $width, $space) {
  display: $flex;
  width: $width;
  justify-content: $space;
}
// for component width height
@mixin size($width, $height) {
  width: $width;
  height: $height;
}

// for component same width height
@mixin square($width, $height: $width) {
  width: $width;
  height: $height;
}

// for max-width
@mixin maxWidth($width, $alignment) {
  max-width: $width;

  @if $alignment=='right' {
    margin-right: auto;
  }

  @else if $alignment=='center' {
    margin: 0 auto;
  }

  @else if $alignment=='left' {
    margin-left: auto;
  }
}

// for background image
@mixin backgrounImage($path, $size, $position, $repeat) {
  background-image: url('$path');
  background-size: $size;
  background-position: $position;
  background-repeat: $repeat;
}

@mixin boxShadow($top, $left, $blur, $color, $inset: false) {
  @if $inset {
    -webkit-box-shadow: inset $top $left $blur $color;
    -moz-box-shadow: inset $top $left $blur $color;
    box-shadow: inset $top $left $blur $color;
  }

  @else {
    -webkit-box-shadow: $top $left $blur $color;
    -moz-box-shadow: $top $left $blur $color;
    box-shadow: $top $left $blur $color;
  }
}

// learning
@mixin WidthHeight($size, $width: false, $height: false) {
  @if $width {
    width: $size;
  }

  @if $height {
    height: $size;
  }
}

@mixin themeColor($light-theme: false) {
  @if $light-theme {
    background-color: $white;
  }

  @else {
    background-color: $black;
  }
}
// For padding
  @mixin padding($vertical, $horizontal){
    padding: $vertical $horizontal;
  }